import importlib.resources as pkg_resources
from fits_validator import spec122
import yaml
from astropy.io import fits

DEFAULT_STRING = 'default'
DEFAULT_INT = 5
DEFAULT_FLOAT = 7.89
DEFAULT_BOOL = True
FILENAME = 'example_vtf_file.fits'

# Set up an empty FITS file
hdu = fits.PrimaryHDU()

# Sections of SPEC 122 that should be present in VTF data
sections = ['ao', 'camera', 'dkist-dkist', 'dkist-id', 'fits', 'pac', 'vtf', 'wcs', 'wfc', 'ws']

# Keywords that are automatically generated by the astropy library
ignore = ['SIMPLE', 'BITPIX', 'NAXIS', 'NAXIS1', 'NAXIS2', 'NAXIS3', 'EXTEND', 'END']

# Add each section of SPEC 122 to the FITS headers
for section in sections:
    yaml_as_dict = yaml.load(pkg_resources.read_text(spec122, f'{section}.yml'), Loader=yaml.Loader)
    # Go through each header keyword and add it to the FITS header
    for key in yaml_as_dict:
        keyword_name = key
        # Check if the keyword should be ignored
        if keyword_name not in ignore:
            keyword_type = yaml_as_dict[key]['type']
            # Get data of the correct type
            if keyword_type == 'str':
                hdu.header[keyword_name] = DEFAULT_STRING
            if keyword_type == 'int':
                hdu.header[keyword_name] = DEFAULT_INT
            if keyword_type == 'float':
                hdu.header[keyword_name] = DEFAULT_FLOAT
            if keyword_type == 'bool':
                hdu.header[keyword_name] = DEFAULT_BOOL

# To custom create data for the keywords, add lines here using the format
# hdu.header['keyword_name'] = VALUE
hdu.header['BZERO'] = 0
hdu.header['BSCALE'] = 1
hdu.header['BLANK'] = 0
hdu.header['DATE'] = '2020-04-22T15:33:53'
hdu.header['DATE-OBS'] = '2020-04-22T15:33:53'
hdu.header['DATE-BGN'] = '2020-04-22T15:33:53'
hdu.header['DATE-END'] = '2020-04-22T15:33:53'
hdu.header['TELESCOP'] = 'DKIST'
hdu.header['OBSERVAT'] = 'National Solar Observatory'
hdu.header['INSTRUME'] = 'VTF'

# Write the FITS file to disk
hdu.writeto(FILENAME, overwrite=True)
print(f'File {FILENAME} created.')
